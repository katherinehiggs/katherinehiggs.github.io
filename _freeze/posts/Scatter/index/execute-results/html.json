{
  "hash": "2b7d581e088341f616a6e0582f4d44e8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Scattering Penguins\"\ndescription: \"An introduction to scatter plots in ggplot2.\"\ndate: \"04/07/2025\"\n\ncategories:\n  - ggplot2\n  - R\n  - data visualisation\n  - penguin tutorial\n---\n\n\n\n\n\nThis post follows directly on from my last, \"How Many Penguins? A First Look at Visualising Data With R and ggplot2\", so if you are new to ggplot2 check that one out first!\n\nToday we are going to be continuing looking at the Palmer Archipelago dataset, this time for creating scatter plots.\n\nAs before the dataset being used can be downloaded directly (in csv format) from [Kaggle](https://www.kaggle.com/code/parulpandey/penguin-dataset-the-new-iris) or imported directly into R with the `palmerpenguins` package.\n\n![Palmer penguins. Artwork by \\@allison_horst.](images/penguins.png){fig-align=\"center\"}\n\n# Importing the Data\n\nAs previously we will be needing the `ggthemes` and `ggplot2` packages. To show off a few themes we'll use a different one for each plot. This time we will also be using the `dplyr` package for data manipulation and the `ggExtra` package which we will be using to plot distributions on plots.\n\nFirstly we import the data with `read.csv`. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggExtra)\n\n# Import the penguins dataset using the read.csv() function, built into R\npenguins <- read.csv(\"penguins_size.csv\")\n```\n:::\n\n\n\nNext we convert the 'species', 'island' and 'sex' variables to factors, this will be a requirement for some of our plots and is generally good practice for factor variables. This is done with `lapply`, click [here](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/lapply) for more on this.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert species, island and sec to factor variables\npenguins[c('species', 'island', 'sex')] <- lapply(penguins[c('species', 'island', 'sex')], as.factor)\n```\n:::\n\n\n\nOur final statement is quite a large one and shows off some of the power of pipes in R. In R `|>` is a pipe, which can be read as \"then\". So the statement `penguins <- penguins |> na.omit() |> rename('Island' = 'island', 'Species' = 'species', 'Sex' = 'sex') |> filter(!(Sex == \".\"))` is saying to take the penguins dataframe, then remove any NA values, then rename 'island', 'species' and 'sex' columns to their capitalised variants then filter the dataframe to remove any rows where the sex of the penguin is recorded as '.' and finally to assign the resulting dataframe to the `penguins` variable. The use of pipes allows us to perform all of these operations in a single line of code, rather than several.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Omit NA values from the dataset, rename 'island', 'species' and 'sex' to be capitalised and remove any penguins with a sex of '.'.\n\npenguins <- penguins |> na.omit() |> rename('Island' = 'island', 'Species' = 'species', 'Sex' = 'sex') |> filter(!(Sex == \".\"))\n```\n:::\n\n\n\n# Simple Scatter\n\nTo create a basic scatter plot we can use `geom_point()`, as shown below. As previously we pass the `penguins` dataframe into the `ggplot()` function with a pipe, set the aes values to be culmen length and culmen depth of the penguins and finally add the plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Basic scatter-1.png){width=672}\n:::\n:::\n\n\n\n# Making Improvements\n\nWe can improve this plot by adding labels, a little colour and using a theme. My usual go to theme is `theme_hc()` from `ggthemes` so we'll start with this one.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm))+\n  geom_point(shape = 16, colour = \"#FF4F00\")+\n  labs(x = \"Culmen Length (mm)\", y = \"Culmen Depth (mm)\", title = \"Culmen Length vs. Depth in \\n Penguins in the Palmer Archipelago\") +\n  theme_hc() +\n  geom_rangeframe()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Basic improved-1.png){width=672}\n:::\n:::\n\n\n\nLooking at our plot it is clear that there appear to be some distinct clusters in the plot, at least two. We have three species of penguins in the dataset, three different islands and two sexes which could all be potential reasons for this clustering. Later we will graphically look at what these clusters may be.\n\nBefore that, however, it is important to look at how to add a line of best fit to the scatter plot. This is incredibly easy with R and we even get built in confidence intervals for free! The line of best fit is created with `geom_smooth(method=\"lm\")` where \"lm\" stands for linear model.\n\nLooking at the plot we can see that a linear model is not a great fit for our data at the moment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm))+\n  geom_point(shape = 16, colour = \"#FF4F00\")+\n  labs(x = \"Culmen Length (mm)\", y = \"Culmen Depth (mm)\", title = \"Culmen Length vs. Depth in \\n Penguins in the Palmer Archipelago\") +\n  geom_smooth(method=\"lm\")+\n  theme_economist_white()+\n  geom_rangeframe()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Basic trend-1.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(cor(penguins$culmen_depth_mm, penguins$culmen_length_mm))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.2286256\n```\n\n\n:::\n:::\n\n\n\n# Marginal Plots\n\nWe can further improve our plot by adding marginal plots, with `ggMarginal` from the `ggExtra` package. These plots help us see the distribution of the data. We could make these plots separately but it can be nice to have this information in the same place as our main plot.\n\nWe do this as below, unlike before we know need to assign our plot to a variable and then call `ggMarginal` on our plot. This is to reduce code repetition when showing off each type of marginal plot available.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- penguins |>\n        ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm))+\n        geom_point(shape = 16, colour = \"#FF4F00\")+\n        labs(x = \"Culmen Length (mm)\", y = \"Culmen Depth (mm)\", title = \"Culmen Length vs. Depth in \\n Penguins in the Palmer Archipelago\") +\n        geom_smooth(method=\"lm\")+\n        theme_calc()\n\n\nggMarginal(plot, type=\"histogram\", fill = \"#FF4F00\", size=5, bins = 12)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/distributions-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggMarginal(plot, type=\"boxplot\", fill = \"#FF4F00\", size=15)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/two-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggMarginal(plot, type=\"density\", fill = \"#FF4F00\", size=10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/three-1.png){width=672}\n:::\n:::\n\n\n\nFor this data in particular I think the boxplot and density plots show the most information. One advantage of creating box plots like this is that it removes a usual downside of the plot, a loss of information about the actual distribution of the data.\n\n# Investigating Clustering\n\nOur previous plots were fine but they do little to explain the clusters of data in the graph. To investigate this we can add the parameter `colour = Species` to `aes`. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm, colour = Species))+\n  geom_point(shape = 16)+\n  labs(x = \"Culmen Length (mm)\", y = \"Culmen Depth (mm)\", title = \"Culmen Length vs. Depth \\n in Penguins in the Palmer Archipelago by Species\") +\n  geom_smooth(method=\"lm\")+\n  scale_fill_few()+\n  theme_few()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/consider species-1.png){width=672}\n:::\n:::\n\n\n\nWe see three distinct clusters based on species of penguin, with very little overlap. Graphically we can see that three linear models for this data appears to be doing a better job than one. We can put some numbers to this by looking at the correlation between culmen length and depth for each species of penguin.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Investigate the correlation for each species\ncorrelation <- penguins %>%\n  group_by(Species) %>%\n    summarise(correlation = cor(culmen_length_mm, culmen_depth_mm))\n\nprint(correlation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã— 2\n  Species   correlation\n  <fct>           <dbl>\n1 Adelie          0.386\n2 Chinstrap       0.654\n3 Gentoo          0.654\n```\n\n\n:::\n:::\n\n\n\nThe closer the magnitude of the correlation is to 1.0, the stronger the correlation. For Adelie penguins the correlation is weak and positive, at 0.4. For Chinstrap and Gentoo penguins the correlation is stronger, 0.65 for both. This would suggest that a linear model such as the one plotted would work well for Chinstrap and Gentoo penguins, which matches our intuition when looking at the distribution of data for each species.\n\nRather than species we might also want to consider Island!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm, colour = Island))+\n  geom_point(shape = 16)+\n  labs(x = \"Culmen Length (mm)\", y = \"Culmen Depth (mm)\", title = \"Culmen Length vs. Depth by Island \\n in Penguins in the Palmer Archipelago\") +\n  geom_smooth(method=\"lm\")+\n  scale_fill_few()+\n  theme_foundation()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/consider island-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncorrelation <- penguins %>%\n  group_by(Island) %>%\n    summarise(correlation = cor(culmen_length_mm, culmen_depth_mm))\n\nprint(correlation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã— 2\n  Island    correlation\n  <fct>           <dbl>\n1 Biscoe         -0.445\n2 Dream           0.365\n3 Torgersen       0.216\n```\n\n\n:::\n:::\n\n\n\nThis seems to have been less successful than splitting the data by species. There is clearly some separation but this is far less distinct. Correlation is also generally weaker.\n\nThere's nothing stopping us considering multiple factors on the same graph! One way to do this is to use the `shape` attribute i.e. change the shape of the point for each species. R will even create new lines of best fit for us for each combination! Sex is an obvious choice to do this with as we would reasonably expect differences between penguin sexes but not necessarily between the same species in different locations (although factors such as nutrition could make this the case).\n\nLooking at sex alone there is a clear difference in our lines of best fit. Correlation appears to be similar between the sexes however both culmen length and depth seem to trend larger in male penguins.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm, colour = Sex))+\n  geom_point()+\n  labs(x = \"Culmen Length (mm)\", y = \"Culmen Depth (mm)\", title = \"Culmen Length vs. Depth by Sex \\n in Penguins in the Palmer Archipelago\") +\n  geom_smooth(method=\"lm\")+\n  scale_fill_few()+\n  theme_solarized()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/combined plot-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncorrelation <- penguins %>%\n  group_by(Sex) %>%\n    summarise(correlation = cor(culmen_length_mm, culmen_depth_mm))\n\nprint(correlation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 2\n  Sex    correlation\n  <fct>        <dbl>\n1 FEMALE      -0.426\n2 MALE        -0.395\n```\n\n\n:::\n:::\n\n\n\nNow let's consider sex and species! \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot(aes(x = culmen_length_mm, y = culmen_depth_mm, colour = Sex, shape=Species))+\n  geom_point()+\n  labs(x = \"Culmen Length (mm)\", y = \"Culmen Depth (mm)\", title = \"Culmen Length vs. Depth by Sex and Species \\n in Penguins in the Palmer Archipelago\") +\n  geom_smooth(method=\"lm\")+\n  scale_fill_few()+\n  theme_excel_new()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/consider sex-1.png){width=672}\n:::\n:::\n\n\nA similar patterns seems to emerge for each species by sex, however there is some slight strangeness. The linear model for male chinstrap penguins makes it appear like their culmen length increases at a greater rate with culmen depth than for female chinstrap penguins. This may be the case, but it may not. I think this highlights a key issue with splitting up data like this, as the size of the dataset you are working with decreases any attempt to make predictions with it become inherently less reliable. \n\n# Facet Plots\n\nWhilst graphs like this can be useful they are a little bit visually busy, we will finish by looking at a different way to see multiple plots in one place, with a facet.\n\nFor this particular set of data we need only add the `facet_grid` function as shown.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=culmen_length_mm, y = culmen_depth_mm, colour = Species))+\n  geom_point()+\n  geom_smooth(method=\"lm\")+\n  facet_grid(Island~Species, # facet_grid showing Island on the y axis and Species on the x axis\n             scales=\"free\",\n             space=\"free_x\") + \n  labs(x=\"Culmen Length (mm)\",\n       y=\"Culmen Depth (mm)\",\n       title=\"Culmen Length vs Depth by Species and Island for Penguins in the Palmer Archipelago\")+\n  theme_base()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nWe can also do this for sex and species.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=culmen_length_mm, y = culmen_depth_mm, colour = Sex))+\n  geom_point()+\n  geom_smooth(method=\"lm\")+\n  facet_grid(Sex~Species, # facet_grid showing Sex on the y axis and Species on the x axis\n             scales=\"free\",\n             space=\"free_x\") + \n  labs(x=\"\",\n       y=\"Penguin Count\",\n       title=\"Culmen Length vs Depth by Species and Sex for Penguins in the Palmer Archipelago\")+\n  theme_stata()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nOr even just species if you would rather the data not be all on one plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=culmen_length_mm, y = culmen_depth_mm, colour = Sex))+\n  geom_point()+\n  geom_smooth(method=\"lm\")+\n  facet_grid(~Species, # facet_grid showing Sex on the y axis and Species on the x axis\n             scales=\"free\",\n             space=\"free_x\") + \n  labs(x=\"\",\n       y=\"Penguin Count\",\n       title=\"Culmen Length vs Depth by Species for Penguins in the Palmer Archipelago\")+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWe need to be very careful here however as if you were not paying attention it might not be obvious that this plot has three distinct x axes.\n\nWe could make this same plot the other way around too. Notice that this time we need to write `Species~.`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x=culmen_length_mm, y = culmen_depth_mm, colour = Sex))+\n  geom_point()+\n  geom_smooth(method=\"lm\")+\n  facet_grid(Species~., # facet_grid showing Sex on the y axis and Species on the x axis\n             scales=\"free\",\n             space=\"free_x\") + \n  labs(x=\"\",\n       y=\"Penguin Count\",\n       title=\"Culmen Length vs Depth by Species for Penguins in the Palmer Archipelago\")+\n  theme_dark()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n# Conclusion\n\nI hope that this post has been a useful introduction to scatter plots with ggplot2. Why not try investigating the relationships between some of the other numeric variables for this data such as body mass or flipper_length? You could even try investigating three numerical variables at once using bubble plots! ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}